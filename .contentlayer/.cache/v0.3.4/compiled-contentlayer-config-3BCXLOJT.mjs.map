{
  "version": 3,
  "sources": ["../../../src/data/siteMetadata.js", "../../../contentlayer.config.ts"],
  "sourcesContent": ["/** @type {import(\"pliny/config\").PlinyConfig } */\nconst siteMetadata = {\n    title: 'Portofolio',\n    author: 'Adnan Muhammad',\n    headerTitle: 'Portofolio',\n    description: 'Exploring code, sharing ideas, and crafting digital wonders together.',\n    language: 'en-us',\n    theme: 'system', // system, dark or light\n    siteUrl: '',\n    siteRepo: 'https://github.com/swiftalker/portofolio',\n    siteLogo: '/logo.png',\n    socialBanner: '/logo.png',\n    email: 'naravaya04@gmail.com',\n    github: 'https://github.com/swiftalker',\n    twitter: 'https://twitter.com/zencilencer',\n    linkedin: 'https://www.linkedin.com/muhammad-adnan-aab80b211',\n    locale: 'en-US',\n    analytics: {\n      // If you want to use an analytics provider you have to add it to the\n      // content security policy in the `next.config.js` file.\n      // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\n      umamiAnalytics: {\n        // We use an env variable for this site to avoid other users cloning our analytics ID\n        umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\n        // You may also need to overwrite the script if you're storing data in the US - ex:\n        // src: 'https://us.umami.is/script.js'\n        // Remember to add 'us.umami.is' in `next.config.js` as a permitted domain for the CSP\n      },\n      // plausibleAnalytics: {\n      //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\n      // },\n      // simpleAnalytics: {},\n      // posthogAnalytics: {\n      //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\n      // },\n      // googleAnalytics: {\n      //   googleAnalyticsId: '', // e.g. G-XXXXXXX\n      // },\n    },\n    newsletter: {\n      // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus\n      // Please add your .env file and modify it according to your selection\n      provider: 'buttondown',\n    },\n    comments: {\n      // If you want to use an analytics provider you have to add it to the\n      // content security policy in the `next.config.js` file.\n      // Select a provider and use the environment variables associated to it\n      // https://vercel.com/docs/environment-variables\n      provider: 'giscus', // supported providers: giscus, utterances, disqus\n      giscusConfig: {\n        // Visit the link below, and follow the steps in the 'configuration' section\n        // https://giscus.app/\n        repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n        repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n        category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n        categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n        mapping: 'pathname', // supported options: pathname, url, title\n        reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\n        // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n        metadata: '0',\n        // theme example: light, dark, dark_dimmed, dark_high_contrast\n        // transparent_dark, preferred_color_scheme, custom\n        theme: 'light',\n        // theme when dark mode\n        darkTheme: 'transparent_dark',\n        // If the theme option above is set to 'custom`\n        // please provide a link below to your custom theme css file.\n        // example: https://giscus.app/themes/custom_example.css\n        themeURL: '',\n        // This corresponds to the `data-lang=\"en\"` in giscus's configurations\n        lang: 'en',\n      },\n    },\n    search: {\n      provider: 'kbar', // kbar or algolia\n      kbarConfig: {\n        searchDocumentsPath: 'search.json', // path to load documents to search\n      },\n      // provider: 'algolia',\n      // algoliaConfig: {\n      //   // The application ID provided by Algolia\n      //   appId: 'R2IYF7ETH7',\n      //   // Public API key: it is safe to commit it\n      //   apiKey: '599cec31baffa4868cae4e79f180729b',\n      //   indexName: 'docsearch',\n      // },\n    },\n  }\n  \n  module.exports = siteMetadata", "import { defineDocumentType, ComputedFields, makeSource } from 'contentlayer/source-files'\nimport { writeFileSync } from 'fs'\nimport readingTime from 'reading-time'\nimport { slug } from 'github-slugger'\nimport path from 'path'\n// Remark packages\nimport remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport {\n  remarkExtractFrontmatter,\n  remarkCodeTitles,\n  remarkImgToJsx,\n  extractTocHeadings,\n} from 'pliny/mdx-plugins/index.js'\n// Rehype packages\nimport rehypeSlug from 'rehype-slug'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\nimport rehypeKatex from 'rehype-katex'\nimport rehypeCitation from 'rehype-citation'\nimport rehypePrismPlus from 'rehype-prism-plus'\nimport rehypePresetMinify from 'rehype-preset-minify'\nimport siteMetadata from './src/data/siteMetadata'\nimport { allCoreContent, sortPosts } from 'pliny/utils/contentlayer.js'\n\nconst root = process.cwd()\nconst isProduction = false\n\nconst computedFields: ComputedFields = {\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\n  },\n  path: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath,\n  },\n  filePath: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFilePath,\n  },\n  toc: { type: 'string', resolve: (doc) => extractTocHeadings(doc.body.raw) },\n}\n\nexport const Blog = defineDocumentType(() => ({\n  name: 'Blog',\n  filePathPattern: 'blog/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    locale: { type: 'string', required: true },\n    language: { type: 'string', required: true },\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    lastmod: { type: 'date' },\n    draft: { type: 'boolean' },\n    summary: { type: 'string' },\n    images: { type: 'json' },\n    authors: { type: 'list', of: { type: 'string' } },\n    layout: { type: 'string' },\n    bibliography: { type: 'string' },\n    canonicalUrl: { type: 'string' },\n  },\n  computedFields: {\n    ...computedFields,\n    structuredData: {\n      type: 'json',\n      resolve: (doc) => ({\n        '@context': 'https://schema.org',\n        '@type': 'BlogPosting',\n        headline: doc.title,\n        datePublished: doc.date,\n        dateModified: doc.lastmod || doc.date,\n        description: doc.summary,\n        image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\n        url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`,\n      }),\n    },\n  },\n}))\n\nexport const Authors = defineDocumentType(() => ({\n  name: 'Authors',\n  filePathPattern: 'authors/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    name: { type: 'string', required: true },\n    avatar: { type: 'string' },\n    company: { type: 'string' },\n    email: { type: 'string' },\n    github: { type: 'string' },\n    layout: { type: 'string' },\n  },\n  computedFields,\n}))\n\nexport default makeSource({\n  contentDirPath: './src/data',\n  documentTypes: [Blog, Authors],\n  mdx: {\n    cwd: process.cwd(),\n    remarkPlugins: [\n      remarkExtractFrontmatter,\n      remarkGfm,\n      remarkCodeTitles,\n      remarkMath,\n      remarkImgToJsx,\n    ],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeAutolinkHeadings,\n      rehypeKatex,\n      [rehypeCitation, { path: path.join(root, 'data') }],\n      [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],\n      rehypePresetMinify,\n    ],\n  },\n  onSuccess: async (importData) => {\n    const { allBlogs } = await importData()\n  },\n})"],
  "mappings": "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",
  "names": ["siteMetadata", "siteMetadata"]
}
